version: 0.2

#env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    commands:
       - echo installing....
        # - sudo pip install boto3
        # - wget https://releases.hashicorp.com/terraform/0.10.4/terraform_0.10.4_linux_amd64.zip
        # - unzip terraform_0.10.4_linux_amd64.zip
        # - sudo mv terraform /bin
        # - rm terraform_0.10.4_linux_amd64.zip
        # - apt-get update
        # - apt-cache search source
        # - apt-get install -y curl jq
        # - curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq 'to_entries | [ .[] | select(.key | (contains("Expiration") or contains("RoleArn"))  | not) ] |  map(if .key == "AccessKeyId" then . + {"key":"AWS_ACCESS_KEY_ID"} else . end) | map(if .key == "SecretAccessKey" then . + {"key":"AWS_SECRET_ACCESS_KEY"} else . end) | map(if .key == "Token" then . + {"key":"AWS_SESSION_TOKEN"} else . end) | map("export \(.key)=\(.value)") | .[]' -r > /tmp/aws_cred_export.txt # work around https://github.com/hashicorp/terraform/issues/8746
        # - echo "Prepare terraform file"
        # - cd terraform-code
        # - echo "terraform { " >> provider-output-backend.tf
        # - echo "   backend \"s3\" { " >> provider-output-backend.tf
        # - echo "   bucket = \"$datapart.$region.terraform-state-software\"" >> provider-output-backend.tf
        # - echo "   key    = \"$applicationname/terraform.tfstate\"" >> provider-output-backend.tf
        # - echo "   region = \"$region\"" >> provider-output-backend.tf
        # - echo "  }" >> provider-output-backend.tf
        # - echo "}" >> provider-output-backend.tf
        # - cat provider-output-backend.tf
        # - . /tmp/aws_cred_export.txt && terraform init
  #pre_build:
    #commands:
      # - command
      # - command
  build:
    commands:
       - echo babla shaked hi
      # - command
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths